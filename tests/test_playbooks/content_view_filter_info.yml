---
- name: "Setup content_view_filter_info test prerequisites"
  hosts: localhost
  collections:
    - theforeman.foreman
  gather_facts: false
  vars_files:
    - vars/server.yml
  tasks:
    - name: "Create Test Organization"
      ansible.builtin.include_tasks: tasks/organization.yml
      vars:
        organization_state: present

    - name: "Create Test Product"
      ansible.builtin.include_tasks: tasks/product.yml
      vars:
        product_state: present

    - name: "Create Test Repository"
      ansible.builtin.include_tasks: tasks/repository.yml
      vars:
        repository_state: present

    - name: "Create Additional Repository"
      ansible.builtin.include_tasks: tasks/repository.yml
      vars:
        repository_state: present
        repository_url: "https://repos.fedorapeople.org/pulp/pulp/demo_repos/zoo/"

    - name: "Create Module repository"
      ansible.builtin.include_tasks: tasks/repository.yml
      vars:
        repository_state: present
        repository_name: "Test Modular Repository"
        repository_content_type: yum
        repository_url: "https://dl.fedoraproject.org/pub/epel/8/Modular/x86_64"

    - name: "Create Container Repository"
      ansible.builtin.include_tasks: tasks/repository.yml
      vars:
        repository_state: present
        repository_name: Test Docker Repository
        repository_content_type: docker
        repository_url: https://registry.access.redhat.com
        repository_docker_upstream_name: ubi9

    - name: "Sync content"
      ansible.builtin.include_tasks: tasks/katello_sync.yml

    - name: "Sync content"
      ansible.builtin.include_tasks: tasks/katello_sync.yml
      vars:
        repository: Test Docker Repository

    - name: "Sync content"
      ansible.builtin.include_tasks: tasks/katello_sync.yml
      vars:
        repository: Test Modular Repository

    - name: "Create Content View"
      ansible.builtin.include_tasks: tasks/content_view.yml
      vars:
        repositories:
          - name: "Test Repository"
            product: "Test Product"
          - name: "Test Docker Repository"
            product: "Test Product"
          - name: "Test Modular Repository"
            product: "Test Product"


- name: "Test content_view_filter info"
  hosts: tests
  collections:
    - theforeman.foreman
  gather_facts: false
  vars_files:
    - vars/server.yml
  tasks:
    - name: "Create content view filter"
      vars:
        content_view_filter_name: "Test Content View Filter - AllRPMsNoErrata"
        organization_name: "Test Organization"
        content_view_name: "Test Content View"
        filter_type: rpm
        inclusion: true
        original_packages: true
        filter_state: present
      content_view_filter:
        username: "{{ foreman_username }}"
        password: "{{ foreman_password }}"
        server_url: "{{ foreman_server_url }}"
        validate_certs: "{{ foreman_validate_certs }}"
        name: "{{ content_view_filter_name }}"
        organization: "{{ organization_name }}"
        content_view: "{{ content_view_name }}"
        filter_type: "{{ filter_type }}"
        inclusion: "{{ inclusion | default(omit) }}"
        original_packages: "{{ original_packages | default(omit) }}"
        filter_state: "{{ filter_state }}"

    - name: "Fetch content_view_filter_info - rpm original packages"
      vars:
        content_view_filter_name: "Test Content View Filter - AllRPMsNoErrata"
        content_view_name: "Test Content View"
        organization_name: "Test Organization"
      content_view_filter_info:
        username: "{{ foreman_username }}"
        password: "{{ foreman_password }}"
        server_url: "{{ foreman_server_url }}"
        validate_certs: "{{ foreman_validate_certs }}"
        organization: "{{ organization_name }}"
        content_view: "{{ content_view_name }}"
        name: "{{ content_view_filter_name }}"
      register: result

    - name: "Assert Result"
      ansible.builtin.assert:
        fail_msg: "Ensuring content view filter info is valid failed!"
        that:
          - result['content_view_filter']['name'] == "Test Content View Filter - AllRPMsNoErrata"
          - result['content_view_filter']['type'] == "rpm"
          - result['content_view_filter']['inclusion'] == True
          - result['content_view_filter']['original_packages'] == True

- name: "Clean up test dependencies"
  hosts: localhost
  collections:
    - theforeman.foreman
  gather_facts: false
  vars_files:
    - vars/server.yml
  tasks:

    - name: "Cleanup Content View Filter"
      vars:
        content_view_filter_name: "Test Content View Filter - AllRPMsNoErrata"
        organization_name: "Test Organization"
        content_view_name: "Test Content View"
        filter_type: rpm
        filter_state: absent
      content_view_filter:
        username: "{{ foreman_username }}"
        password: "{{ foreman_password }}"
        server_url: "{{ foreman_server_url }}"
        validate_certs: "{{ foreman_validate_certs }}"
        name: "{{ content_view_filter_name }}"
        organization: "{{ organization_name }}"
        content_view: "{{ content_view_name }}"
        filter_type: "{{ filter_type }}"
        filter_state: "{{ filter_state }}"

    - name: Clean up the content view
      ansible.builtin.include_tasks: tasks/content_view.yml
      vars:
        content_view_state: absent

    - name: "Clean up repositories"
      ansible.builtin.include_tasks: tasks/repository.yml
      vars:
        repository_name: Test Modular Repository
        repository_state: absent

    - name: "Clean up repositories"
      ansible.builtin.include_tasks: tasks/repository.yml
      vars:
        repository_name: Test Docker Repository
        repository_state: absent

    - name: "Clean up repositories"
      ansible.builtin.include_tasks: tasks/repository.yml
      vars:
        repository_state: absent

    - name: "Clean up products"
      ansible.builtin.include_tasks: tasks/product.yml
      vars:
        product_state: absent

    - name: "Clean up Organizations"
      ansible.builtin.include_tasks: tasks/organization.yml
      vars:
        organization_state: absent
...
